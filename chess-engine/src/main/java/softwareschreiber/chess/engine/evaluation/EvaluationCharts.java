package softwareschreiber.chess.engine.evaluation;

/**
 * Contains the evaluation charts for the pieces.
 */
public class EvaluationCharts {
	public static final int[][] pawnTable = {
			{ 50, 50, 50, 50, 50, 50, 50, 50 },
			{ 100, 100, 100, 100, 100, 100, 100, 100 },
			{ 60, 60, 70, 80, 80, 70, 60, 60 },
			{ 55, 55, 60, 75, 75, 60, 55, 55 },
			{ 50, 50, 50, 70, 70, 50, 50, 50 },
			{ 55, 45, 40, 50, 50, 40, 45, 55 },
			{ 55, 60, 60, 30, 30, 60, 60, 55 },
			{ 50, 50, 50, 50, 50, 50, 50, 50 }
	};

	public static final int[][] knightTable = {
			{ 30, 40, 50, 50, 50, 50, 40, 30 },
			{ 40, 60, 80, 80, 80, 80, 60, 40 },
			{ 50, 80, 90, 95, 95, 90, 80, 50 },
			{ 50, 85, 95, 100, 100, 95, 85, 50 },
			{ 50, 80, 95, 100, 100, 95, 80, 50 },
			{ 50, 85, 90, 95, 95, 90, 85, 50 },
			{ 40, 60, 80, 85, 85, 80, 60, 40 },
			{ 30, 40, 50, 50, 50, 50, 40, 30 }
	};

	public static final int[][] bishopTable = {
			{ 70, 80, 80, 80, 80, 80, 80, 70 },
			{ 80, 90, 90, 90, 90, 90, 90, 80 },
			{ 80, 90, 95, 100, 100, 95, 90, 80 },
			{ 80, 95, 95, 100, 100, 95, 95, 80 },
			{ 80, 90, 100, 100, 100, 100, 90, 80 },
			{ 80, 100, 100, 100, 100, 100, 100, 80 },
			{ 80, 95, 90, 90, 90, 90, 95, 80 },
			{ 70, 80, 80, 80, 80, 80, 80, 70 }
	};

	public static final int[][] rookTable = {
			{ 90, 90, 90, 90, 90, 90, 90, 90 },
			{ 95, 100, 100, 100, 100, 100, 100, 95 },
			{ 85, 90, 90, 90, 90, 90, 90, 85 },
			{ 85, 90, 90, 90, 90, 90, 90, 85 },
			{ 85, 90, 90, 90, 90, 90, 90, 85 },
			{ 85, 90, 90, 90, 90, 90, 90, 85 },
			{ 85, 90, 90, 90, 90, 90, 90, 85 },
			{ 90, 90, 90, 95, 95, 90, 90, 90 }
	};

	public static final int[][] queenTable = {
			{ 75, 85, 85, 90, 90, 85, 85, 75 },
			{ 85, 95, 95, 95, 95, 95, 95, 85 },
			{ 85, 95, 100, 100, 100, 100, 95, 85 },
			{ 90, 95, 100, 100, 100, 100, 95, 90 },
			{ 95, 95, 100, 100, 100, 100, 95, 90 },
			{ 85, 100, 100, 100, 100, 100, 95, 85 },
			{ 85, 95, 100, 95, 95, 95, 95, 85 },
			{ 75, 85, 85, 90, 90, 85, 85, 75 }
	};

	public static final int[][] kingTable = {
			{ 40, 30, 30, 20, 20, 30, 30, 40 },
			{ 40, 30, 30, 20, 20, 30, 30, 40 },
			{ 40, 30, 30, 20, 20, 30, 30, 40 },
			{ 40, 30, 30, 20, 20, 30, 30, 40 },
			{ 50, 40, 40, 30, 30, 40, 40, 50 },
			{ 60, 50, 50, 50, 50, 50, 50, 60 },
			{ 90, 90, 70, 70, 70, 70, 90, 90 },
			{ 90, 100, 80, 70, 70, 80, 100, 90 }
	};
}
